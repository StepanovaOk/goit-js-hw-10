{"version":3,"file":"1-timer-75dcdebf.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst btnStart = document.querySelector('input.input-field');\nconst dataDay = document.querySelector('span[data-days]');\nconst dataHours = document.querySelector('span[data-hours]');\nconst dataMinutes = document.querySelector('span[data-minutes]');\nconst dataSeconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\nlet difference;\nlet timerInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    difference = userSelectedDate.getTime() - Date.now();\n    if (userSelectedDate < Date.now()) {\n      window.alert('Please choose a date in the future');\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n\n  onChange(selectedDates) {\n    if (selectedDates.length === 0) {\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction onTimer(difference) {\n  const timer = convertMs(difference);\n  dataDay.textContent = `${addLeadingZero(timer.days)}`;\n  dataHours.textContent = `${addLeadingZero(timer.hours)}`;\n  dataMinutes.textContent = `${addLeadingZero(timer.minutes)}`;\n  dataSeconds.textContent = `${addLeadingZero(timer.seconds)}`;\n}\n\nfunction onStart() {\n  btnStart.addEventListener('click', () => {\n    timerInterval = setInterval(() => {\n      if (difference <= 0) {\n        clearInterval(timerInterval);\n      } else {\n        onTimer(difference);\n        difference -= 1000;\n      }\n    }, 1000);\n  });\n}\n\nflatpickr('#datetime-picker', options);\nonStart();\n"],"names":["btnStart","dataDay","dataHours","dataMinutes","dataSeconds","userSelectedDate","difference","timerInterval","options","selectedDates","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","onTimer","timer","onStart","flatpickr"],"mappings":"+uBAGA,MAAMA,EAAW,SAAS,cAAc,mBAAmB,EACrDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/D,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,GACjCH,EAAaD,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC9CA,EAAmB,KAAK,OAC1B,OAAO,MAAM,oCAAoC,EACjDL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,EAED,SAASS,EAAe,CAClBA,EAAc,SAAW,EAC3BT,EAAS,SAAW,GAEpBA,EAAS,SAAW,EAEvB,CACH,EAEA,SAASU,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAQZ,EAAY,CAC3B,MAAMa,EAAQT,EAAUJ,CAAU,EAClCL,EAAQ,YAAc,GAAGe,EAAeG,EAAM,IAAI,IAClDjB,EAAU,YAAc,GAAGc,EAAeG,EAAM,KAAK,IACrDhB,EAAY,YAAc,GAAGa,EAAeG,EAAM,OAAO,IACzDf,EAAY,YAAc,GAAGY,EAAeG,EAAM,OAAO,GAC3D,CAEA,SAASC,GAAU,CACjBpB,EAAS,iBAAiB,QAAS,IAAM,CACvCO,EAAgB,YAAY,IAAM,CAC5BD,GAAc,EAChB,cAAcC,CAAa,GAE3BW,EAAQZ,CAAU,EAClBA,GAAc,IAEjB,EAAE,GAAI,CACX,CAAG,CACH,CAEAe,EAAU,mBAAoBb,CAAO,EACrCY,EAAS"}